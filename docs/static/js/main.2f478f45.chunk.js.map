{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACQ,sBAAMC,SAVO,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAC,OAAMP,GAAN,mBAAqBO,OACrCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OAFAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAGrB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,4BAAKA,QCFJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECLwB,SAAEA,GAC1B,MAA4Bd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAmBA,OAdAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAAEtB,IAEEuB,EDf0BK,CAAc5B,GAAjCa,EAAd,EAAQN,KAAae,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhBzBkB,EAAe,WACxB,MAAsC3C,mBAAS,CAAE,cAAjD,mBAAQ4C,EAAR,KAAoB7C,EAApB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCXpC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2f478f45.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( c => [ inputValue, ...c] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=zz6iemGzH99SRpK85PxTLSrGvewWJ3nX`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    console.log({ id, title, url });\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport {GifGridItem} from \"./GifGridItem\";\r\n// import {getGifs} from \"../helpers/getGifs\";\r\n//import PropTypes from 'prop-types';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // const [ images, setImages ] = useState( [] );\r\n    const { data: images,loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        < >\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">LOADING</p>}\r\n\r\n            <div className=\"card-gird\">\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        < />\r\n    );\r\n\r\n}\r\n\r\n//GifGrid.propTypes = {};","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nexport const GifExpertApp = () => {\r\n    const [ categories, setCategories ] = useState([ 'One Punch' ]);\r\n\r\n    return (\r\n        < >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                        <GifGrid\r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        < />\r\n    );\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from \"./GifExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root'),\n);\n\n/**\n    GifExpertApp\n        <h2>GifExpertApp</h2>\n        <hr>\n **/"],"sourceRoot":""}